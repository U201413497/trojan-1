sudo groupadd certusers
sudo useradd -r -M -G certusers trojan
sudo useradd -r -m -G certusers acme

Ubuntu or Debian
更新源

sudo apt update
sudo apt upgrade -y
安装acme.sh需要的依赖。

sudo apt install -y socat cron curl
启动crontab

sudo systemctl start cron
sudo systemctl enable cron
安装Trojan需要的依赖。

sudo apt install -y libcap2-bin xz-utils nano
安装Nginx。

sudo apt install -y nginx
CentOS
安装acme.sh需要的依赖。

sudo yum install -y socat cronie curl
启动crontab

sudo systemctl start crond
sudo systemctl enable crond
安装Trojan需要的依赖。

sudo yum install -y xz nano
安装Nginx。

sudo yum install -y nginx
创建证书文件夹
第一条命令新建一个文件夹/usr/local/etc/certfiles用于存放证书。第二条命令将证书文件夹所有者改为acme，使得用户acme有权限写入证书。

sudo mkdir /usr/local/etc/certfiles
sudo chown -R acme:acme /usr/local/etc/certfiles
配置证书
安装acme.sh自动管理CA证书脚本
分别执行如下命令，注意看是否报错。第一条命令切换到用户acme。第二条命令安装acme.sh。第三条命令退出当前用户。第四条命令再次切换到用户acme。注意到这里两次切换用户的操作不能省略，因为安装完acme.sh之后要重新登录当前用户，否则无法识别出acme.sh命令。

sudo su -l -s /bin/bash acme
curl  https://get.acme.sh | sh
exit
sudo su -l -s /bin/bash acme
添加cloudflare Global CA Key
不是使用cloudflare DNS的请查看域名申请与解析部分自己做调整！

需要让acme.sh自动管理你的证书，所以需要添加cloudflare的API。登录cloudflare之后定位到：头像>>My Profile>>API Tokens。可以看到这里有两个API Keys。我们需要的是Global API Key。Origin CA Key是不可以使用的。点击View即可查看，注意查看之后自己保存下来，每天可查看次数是有限制的。

然后在Xshell里面执行如下两条命令，注意执行成功没有提示，所以自己不要输错了。其中引号内的内容改为你自己的。注意，本文中代码需要手动修改的地方都使用<>包裹。

export CF_Key="<Your Global API Key>"
export CF_Email="<Your cloudflare account Email>"
申请证书
不是使用cloudflare DNS的请查看域名申请与解析部分自己做调整！

执行如下命令（注意域名<tdom.ml>改为你自己的域名），等待一会儿。

acme.sh --issue --dns dns_cf -d <tdom.ml>
看到下图的提示表示证书申请成功。证书申请成功提示

申请失败怎么办？证书申请失败的可能性一般有：1. CF_Key或CF_Email填写错误；证书申请次数超限等。此时切忌反复尝试，原因是证书每一个周申请次数是有限制的（20次），如果超限了就需要等一个周或者更换域名了（这个限制是争对每一个子域单独做的限制，所以万一超限了还可以用子域名继续部署）。解决方案是：在上述命令后加--staging参数继续测试。测试通过之后，删除上图所示四个证书文件并取消--staging参数再执行一次。--staging参数申请的证书只作为测试用，客户端是无法认证通过的（提示SSL handshake failed: tlsv1 alert unknown ca），所以使用--staging参数申请到了证书之后要去掉--staging参数重新申请一次。

安装证书
执行如下命令（注意域名<tdom.ml>改为你自己的域名），第一条命令使用acme.sh将证书安装到certfiles目录，这样acme.sh更新证书的时候会自动将新的证书安装到这里。第二条命令是配置acme.sh自动更新和自动更新证书，这样配置完Trojan之后一般不用管服务器。

acme.sh --install-cert -d <tdom.ml> --key-file /usr/local/etc/certfiles/private.key --fullchain-file /usr/local/etc/certfiles/certificate.crt
acme.sh  --upgrade  --auto-upgrade
修改权限
最后还要允许组内用户访问证书。可通过如下命令实现。第一条命令将证书文件夹所在用户组改为certusers。第二条命令是赋予证书文件夹组内用户读取权限。运行这两条命令之后用户trojan就有权限读取证书了。第三条命令退出用户acme，因为证书已经安装完成。

chown -R acme:certusers /usr/local/etc/certfiles
chmod -R 750 /usr/local/etc/certfiles
exit
配置Trojan
安装Trojan
分别执行如下四个命令，注意看是否报错。第一个命令是安装Trojan，安装完成一般会提示版本号注意看是否是最新版本。第二个命令是将Trojan配置文件的所有者修改为用户trojan，由于使用sudo安装的Trojan，该配置文件默认是属于root用户的，而我们需要使用用户trojan运行Trojan，不修改所有者会导致启动Trojan遇到权限问题。第三个命令备份Trojan配置文件，以防万一。第四个命令是使用nano修改配置文件。

sudo bash -c "$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)"
sudo chown -R trojan:trojan /usr/local/etc/trojan
sudo cp /usr/local/etc/trojan/config.json /usr/local/etc/trojan/config.json.bak
sudo nano /usr/local/etc/trojan/config.json
第四个命令执行完之后屏幕会显示Trojan的配置文件，定位到password、cert和key并修改。密码按自己喜好，cert和key分别改为/usr/local/etc/certfiles/certificate.crt和/usr/local/etc/certfiles/private.key。编辑完成配置文件之后按屏幕下方快捷键提示（^O和^X即：Ctrl+O和Ctrl+X）保存并退出nano。修改之后的config文件如图所示。另外，如果有IPv6地址，将local_addr的0.0.0.0改为::才可以使用。修改config

启动Trojan
修改Trojan启动用户
执行如下命令，打开trojan.service文件，并将用户修改为trojan。

sudo nano /etc/systemd/system/trojan.service
添加用户效果如图所示，注意等号旁边没有空格。添加trojan用户到trojan.service

然后重新加载配置文件。

sudo systemctl daemon-reload
赋予Trojan监听443端口能力
执行如下命令，赋予Trojan监听1024以下端口的能力，使得Trojan可以监听到443端口。这是由于我们使用非root用户启动Trojan，但是Linux默认不允许非root用户启动的进程监听1024以下的端口，除非为每一个二进制文件显式声明。

sudo setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/trojan
使用systemd启动Trojan
Trojan启动、查看状态命令分别如下，第一条是启动Trojan，第二条是查看Trojan运行状态。启动之后再查看一下状态，Trojan显示active (running)即表示正常启动了。如果出现fatal: config.json(n): invalid code sequence错误，那么是你的配置文件第n行有错误，请检查。

sudo systemctl restart trojan
sudo systemctl status trojan
更新证书
当acme.sh重新安装证书之后，需要通知Trojan重新加载证书。最简单的方案是每三个月登录服务器重启Trojan，但是不够完美，毕竟重启的时候会导致服务中断。其实Trojan有实现reload certificate and private key功能，只需要在证书更新后给Trojan发送SIGUSR1消息即可。Trojan收到SIGUSR1消息后便会自动加载新的证书和密钥文件，这样就不用重启Trojan了。手动给Trojan发送SIGUSR1消息的命令是sudo -u trojan killall -s SIGUSR1 trojan，但是这样也不够完美，也得每三个月登录服务器运行一次该命令。其实我们可以给用户trojan添加定时任务，使其每个月运行一次该命令即可。实现如下。

首先，编辑用户trojan的crontab文件

sudo -u trojan crontab -e
在文件末尾添加一行如下，该行表示每个月1号的时候运行命令killall -s SIGUSR1 trojan，由于是使用用户trojan运行的，故不需要在前面加sudo -u trojan。

0 0 1 * * killall -s SIGUSR1 trojan
最后查看crontab是否生效。

sudo -u trojan crontab -l
更新Trojan
如果Trojan版本有更新（可以去这里查看是否有更新），那么使用本教程搭建的服务器端更新Trojan版本只需要三条命令即可，不过要注意的是，第一条命令会提示是否覆盖配置文件，如果没有必要请回答n，否则配置文件将会被覆盖（如果不小心覆盖了就得自己重新编辑了）。第二条命令重新赋予Trojan监听443端口的能力。第三条命令重启Trojan。

sudo bash -c "$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)"
sudo setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/trojan
sudo systemctl restart trojan
配置Nginx
写入虚拟主机到Nginx配置文件

由于Nginx配置在Debian系列系统和CentOS系列系统组织方式不同，所以配置文件位置和使用方式有细微区别，为了统一，我将CentOS系列系统的组织结构做细微调整。

在Debian系列系统中，Nginx的虚拟主机配置文件在/etc/nginx/sites-available/文件夹中，如果要开启某一个虚拟主机，则建立一个软连接到/etc/nginx/sites-enabled/文件夹并重启Nginx即可。默认虚拟主机在/etc/nginx/sites-enabled/文件夹，需要关闭掉，否则会冲突。

在CentOS系列系统中，Nginx的虚拟主机配置文件在/etc/nginx/conf.d/文件夹中以.conf后缀保存，写入之后就可以使用。默认虚拟主机集成在Nginx配置文件/etc/nginx/nginx.conf中，需要打开将其中的server块删除，否则会冲突。Debian系列系统中的/etc/nginx/sites-enabled/和/etc/nginx/sites-available/文件夹结构在CentOS系列系统中是没有的，不过这个策略很不错，可以很方便的开启和关闭虚拟主机，我这里手动调整一下。

CentOS
按上述分析，我们使用下面两条命令在/etc/nginx/中添加两个文件夹。

sudo mkdir /etc/nginx/sites-available
sudo mkdir /etc/nginx/sites-enabled
执行如下命令使用nano打开Nginx配置文件，删除其中server块，并添加对/etc/nginx/sites-enabled/文件夹的索引。

sudo nano /etc/nginx/nginx.conf
配置文件修改结果如下图所示。etc_nginx_nginx_conf

CentOS反向代理需要配置SELinux允许httpd模块可以联网，否则服务器会返回502错误。

sudo setsebool -P httpd_can_network_connect true
Ubuntu or Debian
使用如下命令关闭Nginx默认虚拟主机。

sudo rm /etc/nginx/sites-enabled/default
写入配置
1.执行如下命令，使用nano添加虚拟主机。(注意域名<tdom.ml>改为你自己的域名，这是虚拟主机的文件名，只是用来自己识别的。如果你已经有配置虚拟主机在这个文件中，可以自己使用cp命令备份一下或者换个名字也行，等介绍完基本配置再讲如何与现有服务集成。)

sudo nano /etc/nginx/sites-available/<tdom.ml>
基于综述部分讲解的Trojan工作原理，现给定Nginx虚拟主机如下所示。这些虚拟主机可以直接拷贝到上面虚拟主机配置文件中再修改为你自己的，其中要修改的地方包括：

第4行的server_name的值<tdom.ml>改为你自己的域名；
第7行的proxy_pass随便指向一个没有敏感信息的网站都可以，这就是你要反向代理的网站，这里我是用了RFC文档的地址；
第15行的server_name的值<10.10.10.10>改为你自己的IP；
第17行<tdom.ml>改为自己的域名，注意别填错了。
server {
    listen 127.0.0.1:80 default_server;

    server_name <tdom.ml>;

    location / {
        proxy_pass https://www.ietf.org;
    }

}

server {
    listen 127.0.0.1:80;

    server_name <10.10.10.10>;

    return 301 https://<tdom.ml>$request_uri;
}

server {
    listen 0.0.0.0:80;
    listen [::]:80;

    server_name _;

    return 301 https://$host$request_uri;
}
解释一下这些虚拟主机的一些细节：第一个server接收来自Trojan的流量，与上面Trojan配置文件对应；第二个server也是接收来自Trojan的流量，但是这个流量尝试使用IP而不是域名访问服务器，所以将其认为是异常流量，并重定向到域名；第三个server接收除127.0.0.1:80外的所有80端口的流量并重定向到443端口，这样便开启了全站https，可有效的防止恶意探测。注意到，第一个和第二个server对应综述部分原理图中的蓝色数据流，第三个server对应综述部分原理图中的红色数据流，综述部分原理图中的绿色数据流不会流到Nginx。

2.使能配置文件注意域名<tdom.ml>改为你自己的域名

sudo ln -s /etc/nginx/sites-available/<tdom.ml> /etc/nginx/sites-enabled/
启动Nginx
Nginx启动命令和Trojan一样，就不过多解释了。

sudo systemctl restart nginx
sudo systemctl status nginx
与现有Nginx服务集成
如果你本机已经有Nginx服务，那么Nginx配置文件需要做适当修改以和现有服务兼容。

在原服务与Trojan使用同一个域名且原来是监听443端口的情况下，那么需要将你的ssl配置删除并将监听地址改为第一个server监听的地址127.0.0.1:80，然后直接用修改好的server代替上述配置文件中第一个server即可。这样https加密部分将会由Trojan处理之后转发给Nginx而不是由Nginx处理，原来的服务对于客户端来说就没有变化。

如果原来的服务与Trojan使用不同的域名，建议是修改Trojan与原来的服务使用同一个域名，如果非要使用不同的域名，请参考第3点。

如果原来的服务就监听了多个域名，那么请自己琢磨Nginx的sni，参考连接：ngx_stream_ssl_preread_module。

如果原来的服务是监听80端口，想要继续监听80端口那么直接去除第三个server即可，如果要改为监听443端口参考第1点。

配置Trojan和Nginx开机自启
虽然开机自启一般用不着，除非vultr机房停电，但是反正也没什么代价，弄一下吧。

sudo systemctl enable trojan
sudo systemctl enable nginx
检查服务器是否配置成功
到这里服务器就配置完成了。此时你可以在浏览器里面访问你的网站看是否能够访问，如果你的网站可以访问了，那么就一切正常啦。

另外，基于以上考虑到的可能的恶意探测，可以验证一下以下情况是否正常。

浏览器中使用ip访问：重定向到https://tdom.ml;
浏览器中使用https://ip访问：重定向到https://tdom.ml(跳转的时候浏览器可能提示不安全是正常的);
浏览器中使用tdom.ml访问：重定向到https://tdom.ml。
启动bbr（可选，建议）
启动bbr需要Linux内核版本在4.10及以上，如果低于该版本需要自己升级（这不在本教程范围之后）内核版本，保证内核版本不低于4.10。查看系统内核版本命令如下。

uname -a
bbr是谷歌开发的网络控制算法，可以加快访问速度。执行下面命令查看当前系统是否启用bbr。

sudo sysctl net.ipv4.tcp_congestion_control
执行完成之后如果提示net.ipv4.tcp_congestion_control = bbr即表示启动了bbr，可以跳过下面启动bbr的步骤。

直接将下面三条命令拷贝粘贴到Xshell里面执行即可启动bbr，检查启动状态同上。

sudo bash -c 'echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf'
sudo bash -c 'echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf'
sudo sysctl -p
配置防火墙（可选）
只打开22、80和443端口可以有效的阻止外部恶意流量，降低服务器暴露的风险。此步骤非必须，而且自己有其他服务记得其他服务的端口也要处理。

本文以ufw为例配置防火墙，ufw是一个很好用的防火墙配置命令，可以简化操作，减少错误的发生。

Debian or Ubuntu执行如下命令安装ufw

sudo apt install -y ufw
CentOS执行如下两个命令安装ufw

sudo yum install -y epel-release
sudo yum install -y ufw
如果服务器无IPv6地址那么需要执行如下命令，将IPV6=yes修改为IPV6=no。

sudo nano /etc/default/ufw
执行如下命令即可成功配置防火墙。注意，如果ssh端口不是22那么第一行需要调整（将ssh改为端口号）。

sudo ufw disable
sudo ufw allow ssh
sudo ufw allow https
sudo ufw allow http
sudo ufw enable
sudo ufw status
sudo ufw status verbose
另外，如果对Trojan不放心，那么可以参考trojan wiki，优化防火墙配置，使得Trojan只能给127.0.0.1:80发送数据和响应外部请求。

Windows或Mac客户端部署
几点说明，目前客户端Trojan不能使用全局代理，所以需要配合其他软件使用，比如proxifier等。推荐使用Trojan+Chrome插件SwitchyOmega实现只能Chrome翻墙的目的。这样Trojan只用监听一个端口，由Chrome插件决定当前流量是否走代理。如果你有别的用途可以单独在某个软件内部使用SOCKS5协议指定代理，地址为Trojan的地址：127.0.0.1:1080。

配置Windows客户端
Windows客户端下载地址Trojan for Windows，打开之后下载最新版本的win.zip压缩包。

下载成功之后解压，修改目录中的config.json配置文件中的local_port、remote_addr和password即可。其中，remote_addr填写自己的域名，local_port开启本地端口，用来接收本地数据，建议修改为不常用端口，否则容易冲突，本文仅使用默认端口1080演示。Trojan不需要安装就可以直接运行，拷贝Trojan文件夹到电脑里面，双击即可运行。如果启动报错，那么说明你的系统里面没有C++运行环境，需要安装VC++运行环境（1.12.3及以前版本安装x86环境，1.13.0及以后版本安装x64环境，或者两个版本都安装也行），然后重新启动Trojan，确认Trojan没有报错即可。如果启动Trojan会一闪而过，那么应该是你配置文件有错误，请仔细检查。可以使用控制台运行Trojan，能看到具体是哪一行有错，具体方法：使用命令提示符在Trojan目录运行trojan命令可以看到具体哪一行错误，如果出现fatal: config.json(n): invalid code sequence错误，那么是你的配置文件第n行有错误，请检查。

如何配置图形界面：Trojan的Windows客户端目前还没有图形界面，如果对黑框有强迫症，可以使用CommandTrayHost将黑框托盘化。这是本人目前采用的方案，相关文件可以在这里下载，下载完成之后解压并将你的配置文件拷贝到Trojan目录即可使用。

配置Mac客户端
Mac客户端下载地址Trojan for Mac，打开之后下载最新版的macos.zip，编辑配置文件同Windows客户端，编辑好配置文件后双击运行start.command即可。如果出现bind: Permission denied错误，需要在终端使用killall trojan命令杀掉现有的Trojan相关的进程。如果出现fatal: config.json(n): invalid code sequence错误，那么是你的配置文件第n行有错误，请检查。

安装Chrome
如果没有安装Chrome需要先安装一下Chrome。

确认服务器可达
在Chrome浏览器中访问你自己的网站，确保服务器可达。这一步在每一台Windows的客户端都必须做，否则有可能会连接服务器失败（Trojan日志显示握手失败），这是Windows系统的问题（或者说是bug吧）。

以SOCKS5方式启动Chrome
只需要这一次以SOCKS5启动Chrome，配置完成之后正常使用即可。

Windows
在命令提示符（搜索框输入cmd）输入下面的命令启动Chrome，注意端口号如果你有修改也要对应的修改。

start C:\"Program Files (x86)"\Google\Chrome\Application\chrome.exe --proxy-server="socks5://127.0.0.1:1080" --host-resolver-rules="MAP * ~NOTFOUND, EXCLUDE 127.0.0.1"
如果上述命令无法启动Chrome，是因为新版本的Chrome更改了安装路径导致的，你需要更新你的Chrome版本啦。

Mac
在终端输入下面的命令启动Chrome，注意端口号如果你有修改也要对应的修改。

/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --proxy-server="socks5://127.0.0.1:1080" --host-resolver-rules="MAP * ~NOTFOUND, EXCLUDE 127.0.0.1"
安装SwitchyOmega插件
访问Chrome网上应用店，搜索SwitchyOmega即可找到SwitchyOmega插件并安装之。安装完成之后重启Chrome。

配置SwitchyOmega插件（以下每一步配置完之后记得应用选项）
在Chrome右上角打开SwitchyOmega配置界面，如图所示：SwitchyOmega选项

情景模式中的auto switch配置如图所示：注意规则列表规则选择proxy，规则列表格式为AutoProxy，其网址为：

https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt
填写完成之后需要先更新情景模式使其生效，如图所示：autoSwitch

情景模式中的proxy配置如下图所示，其中代理协议选择SOCKS5，这是Trojan支持的协议，注意不要选错了，127.0.0.1:1080为Trojan代理地址，只有流向这个地址的流量Trojan才会处理，如果Trojan配置文件有修改本地端口号这里也得对应的修改。proxy

设定中的初始情景模式选择auto switch，如图所示。这样当检测到目标地址在GFW列表中的时候Chrome会让其走Trojan代理。否则直连。初始情景模式

然后重启Chrome，保证SwitchyOmega运行在auto switch模式，否则可能无法正常使用，常见现象有无法访问国外网站、导致访问国内网站速度变慢或无法访问内网等。如图所示：确定状态

至此客户端Trojan已经配置完成，尽情享受吧！！！

其他客户端部署指南
Linux客户端：Linux客户端安装方式与服务端一样，配置文件参考客户端修改即可；

IOS客户端：美区ID+[Pharos Pro | Shadowrocket];

Android客户端：igniter，目前尚未支持分流，慎用！Ubuntu or Debian
更新源

sudo apt update
sudo apt upgrade -y
安装acme.sh需要的依赖。

sudo apt install -y socat cron curl
启动crontab

sudo systemctl start cron
sudo systemctl enable cron
安装Trojan需要的依赖。

sudo apt install -y libcap2-bin xz-utils nano
安装Nginx。

sudo apt install -y nginx
CentOS
安装acme.sh需要的依赖。

sudo yum install -y socat cronie curl
启动crontab

sudo systemctl start crond
sudo systemctl enable crond
安装Trojan需要的依赖。

sudo yum install -y xz nano
安装Nginx。

sudo yum install -y nginx
创建证书文件夹
第一条命令新建一个文件夹/usr/local/etc/certfiles用于存放证书。第二条命令将证书文件夹所有者改为acme，使得用户acme有权限写入证书。

sudo mkdir /usr/local/etc/certfiles
sudo chown -R acme:acme /usr/local/etc/certfiles
配置证书
安装acme.sh自动管理CA证书脚本
分别执行如下命令，注意看是否报错。第一条命令切换到用户acme。第二条命令安装acme.sh。第三条命令退出当前用户。第四条命令再次切换到用户acme。注意到这里两次切换用户的操作不能省略，因为安装完acme.sh之后要重新登录当前用户，否则无法识别出acme.sh命令。

sudo su -l -s /bin/bash acme
curl  https://get.acme.sh | sh
exit
sudo su -l -s /bin/bash acme
添加cloudflare Global CA Key
不是使用cloudflare DNS的请查看域名申请与解析部分自己做调整！

需要让acme.sh自动管理你的证书，所以需要添加cloudflare的API。登录cloudflare之后定位到：头像>>My Profile>>API Tokens。可以看到这里有两个API Keys。我们需要的是Global API Key。Origin CA Key是不可以使用的。点击View即可查看，注意查看之后自己保存下来，每天可查看次数是有限制的。

然后在Xshell里面执行如下两条命令，注意执行成功没有提示，所以自己不要输错了。其中引号内的内容改为你自己的。注意，本文中代码需要手动修改的地方都使用<>包裹。

export CF_Key="<Your Global API Key>"
export CF_Email="<Your cloudflare account Email>"
申请证书
不是使用cloudflare DNS的请查看域名申请与解析部分自己做调整！

执行如下命令（注意域名<tdom.ml>改为你自己的域名），等待一会儿。

acme.sh --issue --dns dns_cf -d <tdom.ml>
看到下图的提示表示证书申请成功。证书申请成功提示

申请失败怎么办？证书申请失败的可能性一般有：1. CF_Key或CF_Email填写错误；证书申请次数超限等。此时切忌反复尝试，原因是证书每一个周申请次数是有限制的（20次），如果超限了就需要等一个周或者更换域名了（这个限制是争对每一个子域单独做的限制，所以万一超限了还可以用子域名继续部署）。解决方案是：在上述命令后加--staging参数继续测试。测试通过之后，删除上图所示四个证书文件并取消--staging参数再执行一次。--staging参数申请的证书只作为测试用，客户端是无法认证通过的（提示SSL handshake failed: tlsv1 alert unknown ca），所以使用--staging参数申请到了证书之后要去掉--staging参数重新申请一次。

安装证书
执行如下命令（注意域名<tdom.ml>改为你自己的域名），第一条命令使用acme.sh将证书安装到certfiles目录，这样acme.sh更新证书的时候会自动将新的证书安装到这里。第二条命令是配置acme.sh自动更新和自动更新证书，这样配置完Trojan之后一般不用管服务器。

acme.sh --install-cert -d <tdom.ml> --key-file /usr/local/etc/certfiles/private.key --fullchain-file /usr/local/etc/certfiles/certificate.crt
acme.sh  --upgrade  --auto-upgrade
修改权限
最后还要允许组内用户访问证书。可通过如下命令实现。第一条命令将证书文件夹所在用户组改为certusers。第二条命令是赋予证书文件夹组内用户读取权限。运行这两条命令之后用户trojan就有权限读取证书了。第三条命令退出用户acme，因为证书已经安装完成。

chown -R acme:certusers /usr/local/etc/certfiles
chmod -R 750 /usr/local/etc/certfiles
exit
配置Trojan
安装Trojan
分别执行如下四个命令，注意看是否报错。第一个命令是安装Trojan，安装完成一般会提示版本号注意看是否是最新版本。第二个命令是将Trojan配置文件的所有者修改为用户trojan，由于使用sudo安装的Trojan，该配置文件默认是属于root用户的，而我们需要使用用户trojan运行Trojan，不修改所有者会导致启动Trojan遇到权限问题。第三个命令备份Trojan配置文件，以防万一。第四个命令是使用nano修改配置文件。

sudo bash -c "$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)"
sudo chown -R trojan:trojan /usr/local/etc/trojan
sudo cp /usr/local/etc/trojan/config.json /usr/local/etc/trojan/config.json.bak
sudo nano /usr/local/etc/trojan/config.json
第四个命令执行完之后屏幕会显示Trojan的配置文件，定位到password、cert和key并修改。密码按自己喜好，cert和key分别改为/usr/local/etc/certfiles/certificate.crt和/usr/local/etc/certfiles/private.key。编辑完成配置文件之后按屏幕下方快捷键提示（^O和^X即：Ctrl+O和Ctrl+X）保存并退出nano。修改之后的config文件如图所示。另外，如果有IPv6地址，将local_addr的0.0.0.0改为::才可以使用。修改config

启动Trojan
修改Trojan启动用户
执行如下命令，打开trojan.service文件，并将用户修改为trojan。

sudo nano /etc/systemd/system/trojan.service
添加用户效果如图所示，注意等号旁边没有空格。添加trojan用户到trojan.service

然后重新加载配置文件。

sudo systemctl daemon-reload
赋予Trojan监听443端口能力
执行如下命令，赋予Trojan监听1024以下端口的能力，使得Trojan可以监听到443端口。这是由于我们使用非root用户启动Trojan，但是Linux默认不允许非root用户启动的进程监听1024以下的端口，除非为每一个二进制文件显式声明。

sudo setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/trojan
使用systemd启动Trojan
Trojan启动、查看状态命令分别如下，第一条是启动Trojan，第二条是查看Trojan运行状态。启动之后再查看一下状态，Trojan显示active (running)即表示正常启动了。如果出现fatal: config.json(n): invalid code sequence错误，那么是你的配置文件第n行有错误，请检查。

sudo systemctl restart trojan
sudo systemctl status trojan
更新证书
当acme.sh重新安装证书之后，需要通知Trojan重新加载证书。最简单的方案是每三个月登录服务器重启Trojan，但是不够完美，毕竟重启的时候会导致服务中断。其实Trojan有实现reload certificate and private key功能，只需要在证书更新后给Trojan发送SIGUSR1消息即可。Trojan收到SIGUSR1消息后便会自动加载新的证书和密钥文件，这样就不用重启Trojan了。手动给Trojan发送SIGUSR1消息的命令是sudo -u trojan killall -s SIGUSR1 trojan，但是这样也不够完美，也得每三个月登录服务器运行一次该命令。其实我们可以给用户trojan添加定时任务，使其每个月运行一次该命令即可。实现如下。

首先，编辑用户trojan的crontab文件

sudo -u trojan crontab -e
在文件末尾添加一行如下，该行表示每个月1号的时候运行命令killall -s SIGUSR1 trojan，由于是使用用户trojan运行的，故不需要在前面加sudo -u trojan。

0 0 1 * * killall -s SIGUSR1 trojan
最后查看crontab是否生效。

sudo -u trojan crontab -l
更新Trojan
如果Trojan版本有更新（可以去这里查看是否有更新），那么使用本教程搭建的服务器端更新Trojan版本只需要三条命令即可，不过要注意的是，第一条命令会提示是否覆盖配置文件，如果没有必要请回答n，否则配置文件将会被覆盖（如果不小心覆盖了就得自己重新编辑了）。第二条命令重新赋予Trojan监听443端口的能力。第三条命令重启Trojan。

sudo bash -c "$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)"
sudo setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/trojan
sudo systemctl restart trojan
配置Nginx
写入虚拟主机到Nginx配置文件

由于Nginx配置在Debian系列系统和CentOS系列系统组织方式不同，所以配置文件位置和使用方式有细微区别，为了统一，我将CentOS系列系统的组织结构做细微调整。

在Debian系列系统中，Nginx的虚拟主机配置文件在/etc/nginx/sites-available/文件夹中，如果要开启某一个虚拟主机，则建立一个软连接到/etc/nginx/sites-enabled/文件夹并重启Nginx即可。默认虚拟主机在/etc/nginx/sites-enabled/文件夹，需要关闭掉，否则会冲突。

在CentOS系列系统中，Nginx的虚拟主机配置文件在/etc/nginx/conf.d/文件夹中以.conf后缀保存，写入之后就可以使用。默认虚拟主机集成在Nginx配置文件/etc/nginx/nginx.conf中，需要打开将其中的server块删除，否则会冲突。Debian系列系统中的/etc/nginx/sites-enabled/和/etc/nginx/sites-available/文件夹结构在CentOS系列系统中是没有的，不过这个策略很不错，可以很方便的开启和关闭虚拟主机，我这里手动调整一下。

CentOS
按上述分析，我们使用下面两条命令在/etc/nginx/中添加两个文件夹。

sudo mkdir /etc/nginx/sites-available
sudo mkdir /etc/nginx/sites-enabled
执行如下命令使用nano打开Nginx配置文件，删除其中server块，并添加对/etc/nginx/sites-enabled/文件夹的索引。

sudo nano /etc/nginx/nginx.conf
配置文件修改结果如下图所示。etc_nginx_nginx_conf

CentOS反向代理需要配置SELinux允许httpd模块可以联网，否则服务器会返回502错误。

sudo setsebool -P httpd_can_network_connect true
Ubuntu or Debian
使用如下命令关闭Nginx默认虚拟主机。

sudo rm /etc/nginx/sites-enabled/default
写入配置
1.执行如下命令，使用nano添加虚拟主机。(注意域名<tdom.ml>改为你自己的域名，这是虚拟主机的文件名，只是用来自己识别的。如果你已经有配置虚拟主机在这个文件中，可以自己使用cp命令备份一下或者换个名字也行，等介绍完基本配置再讲如何与现有服务集成。)

sudo nano /etc/nginx/sites-available/<tdom.ml>
基于综述部分讲解的Trojan工作原理，现给定Nginx虚拟主机如下所示。这些虚拟主机可以直接拷贝到上面虚拟主机配置文件中再修改为你自己的，其中要修改的地方包括：

第4行的server_name的值<tdom.ml>改为你自己的域名；
第7行的proxy_pass随便指向一个没有敏感信息的网站都可以，这就是你要反向代理的网站，这里我是用了RFC文档的地址；
第15行的server_name的值<10.10.10.10>改为你自己的IP；
第17行<tdom.ml>改为自己的域名，注意别填错了。
server {
    listen 127.0.0.1:80 default_server;

    server_name <tdom.ml>;

    location / {
        proxy_pass https://www.ietf.org;
    }

}

server {
    listen 127.0.0.1:80;

    server_name <10.10.10.10>;

    return 301 https://<tdom.ml>$request_uri;
}

server {
    listen 0.0.0.0:80;
    listen [::]:80;

    server_name _;

    return 301 https://$host$request_uri;
}
解释一下这些虚拟主机的一些细节：第一个server接收来自Trojan的流量，与上面Trojan配置文件对应；第二个server也是接收来自Trojan的流量，但是这个流量尝试使用IP而不是域名访问服务器，所以将其认为是异常流量，并重定向到域名；第三个server接收除127.0.0.1:80外的所有80端口的流量并重定向到443端口，这样便开启了全站https，可有效的防止恶意探测。注意到，第一个和第二个server对应综述部分原理图中的蓝色数据流，第三个server对应综述部分原理图中的红色数据流，综述部分原理图中的绿色数据流不会流到Nginx。

2.使能配置文件注意域名<tdom.ml>改为你自己的域名

sudo ln -s /etc/nginx/sites-available/<tdom.ml> /etc/nginx/sites-enabled/
启动Nginx
Nginx启动命令和Trojan一样，就不过多解释了。

sudo systemctl restart nginx
sudo systemctl status nginx
与现有Nginx服务集成
如果你本机已经有Nginx服务，那么Nginx配置文件需要做适当修改以和现有服务兼容。

在原服务与Trojan使用同一个域名且原来是监听443端口的情况下，那么需要将你的ssl配置删除并将监听地址改为第一个server监听的地址127.0.0.1:80，然后直接用修改好的server代替上述配置文件中第一个server即可。这样https加密部分将会由Trojan处理之后转发给Nginx而不是由Nginx处理，原来的服务对于客户端来说就没有变化。

如果原来的服务与Trojan使用不同的域名，建议是修改Trojan与原来的服务使用同一个域名，如果非要使用不同的域名，请参考第3点。

如果原来的服务就监听了多个域名，那么请自己琢磨Nginx的sni，参考连接：ngx_stream_ssl_preread_module。

如果原来的服务是监听80端口，想要继续监听80端口那么直接去除第三个server即可，如果要改为监听443端口参考第1点。

配置Trojan和Nginx开机自启
虽然开机自启一般用不着，除非vultr机房停电，但是反正也没什么代价，弄一下吧。

sudo systemctl enable trojan
sudo systemctl enable nginx
检查服务器是否配置成功
到这里服务器就配置完成了。此时你可以在浏览器里面访问你的网站看是否能够访问，如果你的网站可以访问了，那么就一切正常啦。

另外，基于以上考虑到的可能的恶意探测，可以验证一下以下情况是否正常。

浏览器中使用ip访问：重定向到https://tdom.ml;
浏览器中使用https://ip访问：重定向到https://tdom.ml(跳转的时候浏览器可能提示不安全是正常的);
浏览器中使用tdom.ml访问：重定向到https://tdom.ml。
启动bbr（可选，建议）
启动bbr需要Linux内核版本在4.10及以上，如果低于该版本需要自己升级（这不在本教程范围之后）内核版本，保证内核版本不低于4.10。查看系统内核版本命令如下。

uname -a
bbr是谷歌开发的网络控制算法，可以加快访问速度。执行下面命令查看当前系统是否启用bbr。

sudo sysctl net.ipv4.tcp_congestion_control
执行完成之后如果提示net.ipv4.tcp_congestion_control = bbr即表示启动了bbr，可以跳过下面启动bbr的步骤。

直接将下面三条命令拷贝粘贴到Xshell里面执行即可启动bbr，检查启动状态同上。

sudo bash -c 'echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf'
sudo bash -c 'echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf'
sudo sysctl -p
配置防火墙（可选）
只打开22、80和443端口可以有效的阻止外部恶意流量，降低服务器暴露的风险。此步骤非必须，而且自己有其他服务记得其他服务的端口也要处理。

本文以ufw为例配置防火墙，ufw是一个很好用的防火墙配置命令，可以简化操作，减少错误的发生。

Debian or Ubuntu执行如下命令安装ufw

sudo apt install -y ufw
CentOS执行如下两个命令安装ufw

sudo yum install -y epel-release
sudo yum install -y ufw
如果服务器无IPv6地址那么需要执行如下命令，将IPV6=yes修改为IPV6=no。

sudo nano /etc/default/ufw
执行如下命令即可成功配置防火墙。注意，如果ssh端口不是22那么第一行需要调整（将ssh改为端口号）。

sudo ufw disable
sudo ufw allow ssh
sudo ufw allow https
sudo ufw allow http
sudo ufw enable
sudo ufw status
sudo ufw status verbose
另外，如果对Trojan不放心，那么可以参考trojan wiki，优化防火墙配置，使得Trojan只能给127.0.0.1:80发送数据和响应外部请求。

Windows或Mac客户端部署
几点说明，目前客户端Trojan不能使用全局代理，所以需要配合其他软件使用，比如proxifier等。推荐使用Trojan+Chrome插件SwitchyOmega实现只能Chrome翻墙的目的。这样Trojan只用监听一个端口，由Chrome插件决定当前流量是否走代理。如果你有别的用途可以单独在某个软件内部使用SOCKS5协议指定代理，地址为Trojan的地址：127.0.0.1:1080。

配置Windows客户端
Windows客户端下载地址Trojan for Windows，打开之后下载最新版本的win.zip压缩包。

下载成功之后解压，修改目录中的config.json配置文件中的local_port、remote_addr和password即可。其中，remote_addr填写自己的域名，local_port开启本地端口，用来接收本地数据，建议修改为不常用端口，否则容易冲突，本文仅使用默认端口1080演示。Trojan不需要安装就可以直接运行，拷贝Trojan文件夹到电脑里面，双击即可运行。如果启动报错，那么说明你的系统里面没有C++运行环境，需要安装VC++运行环境（1.12.3及以前版本安装x86环境，1.13.0及以后版本安装x64环境，或者两个版本都安装也行），然后重新启动Trojan，确认Trojan没有报错即可。如果启动Trojan会一闪而过，那么应该是你配置文件有错误，请仔细检查。可以使用控制台运行Trojan，能看到具体是哪一行有错，具体方法：使用命令提示符在Trojan目录运行trojan命令可以看到具体哪一行错误，如果出现fatal: config.json(n): invalid code sequence错误，那么是你的配置文件第n行有错误，请检查。

如何配置图形界面：Trojan的Windows客户端目前还没有图形界面，如果对黑框有强迫症，可以使用CommandTrayHost将黑框托盘化。这是本人目前采用的方案，相关文件可以在这里下载，下载完成之后解压并将你的配置文件拷贝到Trojan目录即可使用。

配置Mac客户端
Mac客户端下载地址Trojan for Mac，打开之后下载最新版的macos.zip，编辑配置文件同Windows客户端，编辑好配置文件后双击运行start.command即可。如果出现bind: Permission denied错误，需要在终端使用killall trojan命令杀掉现有的Trojan相关的进程。如果出现fatal: config.json(n): invalid code sequence错误，那么是你的配置文件第n行有错误，请检查。

安装Chrome
如果没有安装Chrome需要先安装一下Chrome。

确认服务器可达
在Chrome浏览器中访问你自己的网站，确保服务器可达。这一步在每一台Windows的客户端都必须做，否则有可能会连接服务器失败（Trojan日志显示握手失败），这是Windows系统的问题（或者说是bug吧）。

以SOCKS5方式启动Chrome
只需要这一次以SOCKS5启动Chrome，配置完成之后正常使用即可。

Windows
在命令提示符（搜索框输入cmd）输入下面的命令启动Chrome，注意端口号如果你有修改也要对应的修改。

start C:\"Program Files (x86)"\Google\Chrome\Application\chrome.exe --proxy-server="socks5://127.0.0.1:1080" --host-resolver-rules="MAP * ~NOTFOUND, EXCLUDE 127.0.0.1"
如果上述命令无法启动Chrome，是因为新版本的Chrome更改了安装路径导致的，你需要更新你的Chrome版本啦。

Mac
在终端输入下面的命令启动Chrome，注意端口号如果你有修改也要对应的修改。

/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --proxy-server="socks5://127.0.0.1:1080" --host-resolver-rules="MAP * ~NOTFOUND, EXCLUDE 127.0.0.1"
安装SwitchyOmega插件
访问Chrome网上应用店，搜索SwitchyOmega即可找到SwitchyOmega插件并安装之。安装完成之后重启Chrome。

配置SwitchyOmega插件（以下每一步配置完之后记得应用选项）
在Chrome右上角打开SwitchyOmega配置界面，如图所示：SwitchyOmega选项

情景模式中的auto switch配置如图所示：注意规则列表规则选择proxy，规则列表格式为AutoProxy，其网址为：

https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt
填写完成之后需要先更新情景模式使其生效，如图所示：autoSwitch

情景模式中的proxy配置如下图所示，其中代理协议选择SOCKS5，这是Trojan支持的协议，注意不要选错了，127.0.0.1:1080为Trojan代理地址，只有流向这个地址的流量Trojan才会处理，如果Trojan配置文件有修改本地端口号这里也得对应的修改。proxy

设定中的初始情景模式选择auto switch，如图所示。这样当检测到目标地址在GFW列表中的时候Chrome会让其走Trojan代理。否则直连。初始情景模式

然后重启Chrome，保证SwitchyOmega运行在auto switch模式，否则可能无法正常使用，常见现象有无法访问国外网站、导致访问国内网站速度变慢或无法访问内网等。如图所示：确定状态

至此客户端Trojan已经配置完成，尽情享受吧！！！

其他客户端部署指南
Linux客户端：Linux客户端安装方式与服务端一样，配置文件参考客户端修改即可；

IOS客户端：美区ID+[Pharos Pro | Shadowrocket];

Android客户端：igniter，目前尚未支持分流，慎用！
